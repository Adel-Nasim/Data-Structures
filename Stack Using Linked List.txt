#include <iostream>
using namespace std;
template <class t> 

class stack {
  private:
  struct node{
   t item;
   node* next = NULL;
  };
  node* top, curr ;
public:
 stack(){
     node* top = NULL;
 }
 bool ISEMPTY(void)
 {
     return top == NULL;
 }
 
 
 void push (t element)
 {  
     node* nodeptr= new node;
     if(nodeptr == NULL) cout <<"stack full on push";
     else 
     {
        nodeptr->item = element;
        nodeptr-> next = top;
        top = nodeptr;
     }
 }
 void pop (t & element)
 {   
     element = top->item;
     node* curr = new node;
     curr = top;
     top  = top->next;
     curr->next = NULL;
     delete curr;
     
 }
 
 void getTop(t &element)
 {   
     if(top == NULL ) cout <<"stack empty on get top";
     element = top->item;
 }
 void print(void)
 {
     node* curr = top;
     cout << "[";
     cout << endl;
     while(curr!= NULL)
     {   

         cout << curr->item <<endl;
         curr= curr->next;
     }
        cout <<"]";
        cout <<endl;
 }
 
 
};


int main() {
    stack <int> s ;
    int item ;
    s.push(5);
    s.push(10);
    s.push(20);
    s.print();
    s.pop(item);
    cout<<endl;
    s.print();
    return 0;
}
